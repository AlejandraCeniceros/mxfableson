{"version":3,"sources":["componentes/ComboBox.jsx","componentes/Dashboard.jsx","componentes/MixedChart.jsx","pages/NetForestCoverChange.jsx","componentes/BarChart.jsx","pages/Biodiversity.jsx","componentes/tabSelector.jsx","pages/Scenathon.jsx","pages/GlobalTargets.js","pages/About.js","componentes/Navbar.js","componentes/Jumbotron.js","componentes/Jumbotron_2.js","componentes/Jumbotron_3.js","componentes/Jumbotron_fin.js","App.js","serviceWorker.js","index.js","assets/banner.jpg","assets/banner_2.jpg"],"names":["Styles","styled","div","ComboBox","props","onChange","className","name","value","Dashboard","metodo","options","responsive","tooltips","mode","elements","line","fill","scales","xAxes","stacked","display","gridLines","yAxes","type","position","id","labels","show","drawMixedChart","data","datasets","label","net_forest_change","backgroundColor","borderColor","hoverBackgroundColor","hoverBorderColor","yAxisID","forest_target","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","gfw_deforestation","aforestation","forest_loss","convertir","map","item","push","GFW_deforestation","Year","drawNfch","dataAux","console","log","combinacion","select","GraficaType","Iteration","Scenario","combinacion_uno","MixedChart","combinacion_dos","combinacion_tres","combinacion_cuatro","combinacion_cinco","combinacion_seis","combinacion_siete","combinacion_ocho","combinacion_nueve","combinacion_dies","combinacion_once","combinacion_doce","BarChart","Rest_of_Sub_Saharan_Africa","Protected_land_Brazil","Protected_land_USA","Protected_land_Canada","Protected_land_Australia","Protected_land_Russia","Protected_land_Rest_of_Central_and_South_America","Protected_land_China","Rest_of_North_Africa_Middle_East_and_central_Asia","Protected_land_Rest_of_Asia_and_Pacific","Protected_land_Rest_of_European_Union","Protected_land_Mexico","Protected_land_Argentina","Protected_land_Indonesia","Protected_land_Ethiopia","Protected_land_Colombia","Protected_land_Germany","Protected_land_South_Africa","Protected_land_Sweden","Protected_land_Otros","undefined","c_country_t","Protected_land","Protected_land_Alemania","includes","drawBiodiversity","seleccionarData","dashboard","NetForestCoverChange","Scenathon","state","handleChange","e","setState","target","this","Component","Features","About","fluid","Container","NavBar","collapseOnSelect","expand","variant","to","Brand","href","Toggle","aria-controls","Collapse","Link","path","component","Nfc","render","Banner","Jumbotron","Banner2","Jumbotron_2","Jumbotron_3","Jumbotron_fin","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5f999d0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n.contenedor selects{\r\n  background-color: #528D93 ;\r\n}\r\n.conetenedor-select {\r\n  color:white;\r\n  &: hover{\r\n    color:#94B046;\r\n  }\r\n}\r\n`;\r\n\r\nfunction ComboBox (props) {\r\n\r\n    \r\n        const{onChange}=props\r\n        return (\r\n            <Styles>\r\n\r\n            <div className=\"contenedor-selects\">\r\n                <br></br>\r\n                <select  name=\"Scenario\" onChange={onChange}>\r\n                    <option value=\"Sustainaible\">Sustainaible</option>\r\n                    <option value=\"Current_trend\">Current trend</option>\r\n                    \r\n                </select>\r\n                <br></br>\r\n                <select  name=\"Iteration\" onChange={onChange}>\r\n                    <option value=\"iteration_4\">iteration:4</option>\r\n                    <option value=\"iteration_3\">iteration:3</option>\r\n                </select>\r\n                <br></br>\r\n                 <select  name=\"GraficaType\" onChange={onChange}>\r\n                    <option value=\"group\">Group</option>\r\n                    <option value=\"regions\">ALL ROW regions</option>\r\n                    <option value=\"countries\">ALL FABLE countries</option>\r\n                </select>\r\n                <br></br>\r\n            </div>\r\n    </Styles>\r\n\r\n\r\n        )\r\n    \r\n}\r\nexport default ComboBox;\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Styles = styled.div`\r\n.contenedor-selects{\r\n  background-color: #528D93 ;\r\n}\r\n.contenedor-selects-select {\r\n  color:white;\r\n  &: hover{\r\n    color:#94B046;\r\n  }\r\n}\r\n`;\r\n\r\n\r\nfunction Dashboard (props) {\r\n\r\n    \r\n        const{metodo}=props\r\n        return (\r\n          \r\n            <div className=\"contenedor-selects\">\r\n                <select  name=\"dashboard\" onChange={metodo}>\r\n                    <option value=\"gts\">Global Target Summary </option>\r\n                    <option value=\"ntch\">Net Forest Cover Change(1)</option>\r\n                    <option value=\"ntch2\">Net Forest Cover Change(2)</option>\r\n                    <option value=\"biodeversity\">Biodeversity</option>\r\n                    <option value=\"pabt\">Protected areac by type </option>\r\n                    <option value=\"lc\">Land Cover</option>\r\n                    <option value=\"fwu\">Fresh water use (1)</option>\r\n                    <option value=\"fwu2\">Fresh water use (2)</option>\r\n                    <option value=\"gge\">GreenHouse Gas(GHG) Emissions(1)</option>\r\n                    <option value=\"gge2\">GreenHouse Gas(GHG) Emissions(2)</option>\r\n                    <option value=\"feipc\">Food energy intake per capita (1)</option>\r\n                    <option value=\"feipc2\">Food energy intake per capita (2)</option>\r\n                    \r\n                </select>\r\n                \r\n                \r\n    \r\n            </div>\r\n\r\n        )\r\n    \r\n}\r\nexport default Dashboard;\r\n\r\n","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\n  const options = {\r\n    responsive: true,\r\n    tooltips: {\r\n      mode: 'label'\r\n    },\r\n    elements: {\r\n      line: {\r\n        fill: false\r\n      }\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n            stacked: true,\r\n\r\n          display: true,\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          \r\n          \r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n            stacked: true,\r\n\r\n          type: 'linear',\r\n          display: true,    \r\n          position: 'left',\r\n          id: 'y-axis-1',\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n\r\n          labels: {\r\n            show: true\r\n          }\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: false,\r\n          position: 'right',\r\n          id: 'y-axis-2',\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          labels: {\r\n            show: true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  \r\n  \r\n  const  drawMixedChart=(props)=> {\r\n    const data = {\r\n      labels: props.data.labels,  \r\n      datasets: [{\r\n        //net_forest_change <- ejemplo\r\n              label: 'Net forest change',\r\n              type:'scatter',\r\n              data:props.data.net_forest_change,\r\n              fill: false,\r\n              \r\n\r\n\r\n              backgroundColor: 'Green',\r\n              borderColor: '#71B37C',\r\n              hoverBackgroundColor: '#71B37C',\r\n              hoverBorderColor: '#71B37C',\r\n              yAxisID: 'y-axis-1'\r\n            },{\r\n              //net_forest_change <- ejemplo\r\n                    label: 'forest_target',\r\n                    type:'scatter',\r\n                    data:props.data.forest_target,\r\n                    fill: false,\r\n                    borderColor: 'Red',\r\n                    backgroundColor: 'Red',\r\n                    pointBorderColor: 'Red',\r\n                    pointBackgroundColor: 'Red',\r\n                    pointHoverBackgroundColor: 'Red',\r\n                    pointHoverBorderColor: 'Red',\r\n                    yAxisID: 'y-axis-1'\r\n                  }\r\n            ,\r\n            {\r\n              //GFW deforestation <- ejemplo\r\n                    label: 'GWF deforestation',\r\n                    type:'scatter',\r\n                    data:props.data.gfw_deforestation,\r\n                    fill: false,\r\n                    borderColor: 'Black',\r\n                    backgroundColor: 'Black',\r\n                    pointBorderColor: 'Black',\r\n                    pointBackgroundColor: 'Black',\r\n                    pointHoverBackgroundColor: 'Black',\r\n                    pointHoverBorderColor: 'Black',\r\n                    yAxisID: 'y-axis-1'\r\n                  },{\r\n              //Aforestation ejemplo\r\n              type: 'bar',\r\n              label: 'Aforestation',\r\n              data: props.data.aforestation,\r\n              fill: false,\r\n              backgroundColor: '#81c784',\r\n              borderColor: '#81c784',\r\n              hoverBackgroundColor: 'darkgreen',\r\n              hoverBorderColor: '#81c784',\r\n              yAxisID: 'y-axis-1'\r\n            },{\r\n              type: 'bar',\r\n              label: 'Forest loss',\r\n              data: props.data.forest_loss,\r\n              fill: false,\r\n              borderColor: '#EC932F',\r\n              backgroundColor: '#ffd54f',\r\n              pointBorderColor: '#ffd54f',\r\n              pointBackgroundColor: '#ffd54f',\r\n              pointHoverBackgroundColor: '#ffd54f',\r\n              pointHoverBorderColor: '#EC932F',\r\n              yAxisID: 'y-axis-1'\r\n            },\r\n          \r\n          ]\r\n        };\r\n        \r\n  \r\n    return (\r\n        <div>\r\n          <h2>NET FOREST COVER CHANGE</h2>\r\n          <Bar data={data}\r\n                options={options}/>\r\n        </div>\r\n      );\r\n  }\r\n  export default drawMixedChart;","import React from \"react\";\r\nimport MixedChart from \"../componentes/MixedChart.jsx\";\r\nimport data from '../data/NetForestCoverChange1.json';\r\n//filter map\r\n//nfch=NetForestCoverChange\r\nconst drawNfch = (props) => {\r\n \r\n  var dataAux;\r\n  console.log(\"clase draw->\"+props.combinacion.select.GraficaType)\r\n  \r\n  if (props.combinacion.select.GraficaType === \"group\" &&  props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n    dataAux= convertir(data.combinacion_uno);\r\n return <MixedChart data={dataAux}/>\r\n} else if (props.combinacion.select.GraficaType === \"group\" &&  props.combinacion.select.Iteration  === \"iteration_3\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n   \r\n  dataAux= convertir(data.combinacion_dos);\r\n return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"group\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_tres);\r\n return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"group\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_cuatro);\r\n return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_cinco);\r\n  return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_seis);\r\n  return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_siete);\r\n  return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_ocho);\r\n  return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_nueve);\r\n  return <MixedChart data={dataAux}/> \r\n}else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_dies);\r\n  return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_once);\r\n  return <MixedChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_doce);\r\n  return <MixedChart data={dataAux}/> \r\n}\r\n\r\nreturn null\r\n}\r\n\r\n\r\nconst convertir=(props)=> {\r\n\r\n  var data = {}; \r\n  data.labels=[];\r\n  \r\n\r\n  \r\n\r\n   data.forest_target=[];\r\n   data.gfw_deforestation=[]; \r\n   data.forest_loss=[]; \r\n   data.aforestation=[]; \r\n   data.net_forest_change=[]; \r\n   \r\n   props.map((item) => {\r\n    data.forest_target.push(item.forest_target);\r\n    data.gfw_deforestation.push(item.GFW_deforestation);\r\n    data.forest_loss.push(item.forest_loss);\r\n    data.aforestation.push(item.aforestation);\r\n    data.net_forest_change.push(item.net_forest_change);\r\n    data.labels.push(item.Year);\r\n    \r\n  });\r\n \r\n\r\n return data\r\n} \r\n  \r\n \r\n\r\nexport default drawNfch;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst options = {\r\n    responsive: true,\r\n    tooltips: {\r\n      mode: 'label'\r\n    },\r\n    elements: {\r\n      line: {\r\n        fill: false\r\n      }\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n            stacked: true,\r\n\r\n          display: true,\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          \r\n          \r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n            stacked: true,\r\n\r\n          type: 'linear',\r\n          display: true,    \r\n          position: 'left',\r\n          id: 'y-axis-1',\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n\r\n          labels: {\r\n            show: true,\r\n            position: 'right',\r\n          }\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: false,\r\n          position: 'right',\r\n          id: 'y-axis-2',\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          labels: {\r\n            show: true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  \r\n\r\n\r\nconst  BarChart=(props)=> {\r\n    \r\n    const data = {\r\n        labels: props.data.labels,\r\n        datasets: [\r\n              {\r\n                //Aforestation ejemplo\r\n                type: 'bar',\r\n                label: 'Rest of Sub-Saharan Africa',\r\n                data:props.data.Rest_of_Sub_Saharan_Africa,\r\n                fill: false,\r\n                backgroundColor: '#faa75a',\r\n                borderColor: '#71B37C',\r\n                hoverBackgroundColor: '#71B37C',\r\n                hoverBorderColor: '#71B37C',\r\n                yAxisID: 'y-axis-1'\r\n              },{\r\n                type: 'bar',\r\n                label: 'Brazil',\r\n                data: props.data.Protected_land_Brazil,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#7cb342',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },{\r\n                type: 'bar',\r\n                label: 'USA',\r\n                data: props.data.Protected_land_USA,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#5a9bd4',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Canada',\r\n                data:props.data.Protected_land_Canada,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#5e35b1',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Australia',\r\n                data: props.data.Protected_land_Australia,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#00b6cb',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              }\r\n              ,\r\n              {\r\n                type: 'bar',\r\n                label: 'Russia',\r\n                data: props.data.Protected_land_Russia,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#5e35b1',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Rest of Central and South America',\r\n                data: props.data.Protected_land_Rest_of_Central_and_South_America,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#00b6cb',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'China',\r\n                data: props.data.Protected_land_China,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#0072f0',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },  {\r\n                type: 'bar',\r\n                label: 'Rest of North Africa Middle East and central Asia',\r\n                data: props.data.Rest_of_North_Africa_Middle_East_and_central_Asia,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#9e67ab',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },  {\r\n                type: 'bar',\r\n                label: 'Rest of Asia and Pacific',\r\n                data: props.data.Protected_land_Rest_of_Asia_and_Pacific,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#0072f0',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Rest of European Union ',\r\n                data: props.data.Protected_land_Rest_of_European_Union,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '##ce7058',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Mexico',\r\n                data: props.data.Protected_land_Mexico,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#ffa800',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              }, {\r\n                type: 'bar',\r\n                label: 'Argentina',\r\n                data: props.data.Protected_land_Argentina,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#ec407a',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },{\r\n                type: 'bar',\r\n                label: 'Indonesia',\r\n                data: props.data.Protected_land_Indonesia,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#7ac36a',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },{\r\n                type: 'bar',\r\n                label: 'Ethiopia',\r\n                data: props.data.Protected_land_Ethiopia,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#f10096',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Colombia',\r\n                data: props.data.Protected_land_Colombia,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#ffa800',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Germany',\r\n                data: props.data.Protected_land_Germany,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#5e35b1',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },{\r\n                type: 'bar',\r\n                label: 'South Africa',\r\n                data: props.data.Protected_land_South_Africa,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#0390d0',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },{\r\n                type: 'bar',\r\n                label: 'Sweden',\r\n                data: props.data.Protected_land_Sweden,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#f10096',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Otros',\r\n                data: props.data.Protected_land_Otros,\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#f66d00',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-1'\r\n              }\r\n              \r\n            ]\r\n          };\r\n          return (\r\n            <div>\r\n              <h2>Biodiversity</h2>\r\n              <Bar data={data}\r\n                    options={options}/>\r\n            </div>\r\n          );\r\n      }\r\n      \r\n\r\nexport default BarChart;","import React from \"react\";\r\nimport BarChart from \"../componentes/BarChart\";\r\nimport data from '../data/Biodiversity.json';\r\n//nfch=NetForestCoverChange\r\nconst drawBiodiversity = (props) => {\r\n \r\n var dataAux;\r\n  \r\n  //IDONTLIKE IFS BUT NI PEZ ANIM0\r\n  if (props.combinacion.select.GraficaType === \"group\" &&  props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n    \r\n    dataAux= convertir(data.combinacion_uno);\r\n return <BarChart data={dataAux}/>\r\n} else if (props.combinacion.select.GraficaType === \"group\" &&  props.combinacion.select.Iteration  === \"iteration_3\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_dos);\r\n return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"group\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_tres);\r\n return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"group\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_cuatro);\r\n return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_cinco);\r\n  return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_seis);\r\n  return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_siete);\r\n  return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"regions\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_ocho);\r\n  return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_nueve);\r\n  return <BarChart data={dataAux}/> \r\n}else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Sustainaible\") {\r\n  dataAux= convertir(data.combinacion_dies);\r\n  return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_4\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_once);\r\n  return <BarChart data={dataAux}/> \r\n} else if (props.combinacion.select.GraficaType === \"countries\" && props.combinacion.select.Iteration === \"iteration_3\" && props.combinacion.select.Scenario === \"Current_trend\") {\r\n  dataAux= convertir(data.combinacion_doce);\r\n  return <BarChart data={dataAux}/> \r\n}\r\n\r\nreturn null\r\n}\r\n\r\n//prueba\r\nconst convertir=(props)=> {\r\n\r\n  var data = {}; \r\n  data.labels=[];\r\n  \r\n\r\n  \r\n \r\n   data.c_country_t=[];\r\n   data.Protected_land_Mexico=[]; \r\n   data.Protected_land_Colombia=[]; \r\n   data.Protected_land_Argentina=[];\r\n   data.Protected_land_Alemania=[];\r\n   data.Protected_land_Canada=[];\r\n   data.Protected_land_Indonesia=[]; \r\n   data.Protected_land_China=[]; \r\n   data.Protected_land_Ethiopia=[]; \r\n   data.Protected_land_Russia=[]; \r\n   data.Protected_land_Australia=[];\r\n   data.Protected_land_Brazil=[];\r\n   data.Protected_land_Rest_of_European_Union=[];\r\n   data.Protected_land_Sweden=[];\r\n   data.Protected_land_USA=[];\r\n\r\n   data.Protected_land_Rest_of_Central_and_South_America=[];\r\n   data.Rest_of_North_Africa_Middle_East_and_central_Asia=[];\r\n   data.Protected_land_Rest_of_Asia_and_Pacific=[];\r\n   data.Protected_land_Germany=[];\r\n   data.Protected_land_South_Africa=[];\r\n   data.Rest_of_Sub_Saharan_Africa=[];\r\n   data.Protected_land_Otros=[];\r\n   if(props!=undefined){\r\n   props.map((item) => {\r\n   \r\n    if(item.c_country_t===\"Mexico\"){\r\n    data.Protected_land_Mexico.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Colombia\"){\r\n      data.Protected_land_Colombia.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Argentina\")\r\n    {\r\n      data.Protected_land_Argentina.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Alemania\")\r\n    {\r\n      data.Protected_land_Alemania.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Canada\")\r\n    {\r\n      data.Protected_land_Canada.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Indonesia\")\r\n    {\r\n      data.Protected_land_Indonesia.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Ethiopia\")\r\n    {\r\n      data.Protected_land_Ethiopia.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Russia\")\r\n    {\r\n      data.Protected_land_Russia.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Australia\")\r\n    {\r\n      data.Protected_land_Australia.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Brazil\")\r\n    {\r\n      data.Protected_land_Brazil.push(item.Protected_land*100); \r\n    }\r\n    else if(item.c_country_t===\"Rest of European Union\")\r\n    {\r\n      data.Protected_land_Rest_of_European_Union.push(item.Protected_land*100); \r\n    }\r\n    else if(item.c_country_t===\"Sweden\")\r\n    {\r\n      data.Protected_land_Sweden.push(item.Protected_land*100); \r\n    }\r\n    else if(item.c_country_t===\"USA\")\r\n    {\r\n      data.Protected_land_USA.push(item.Protected_land*100); \r\n    }\r\n    else if(item.c_country_t===\"China\")\r\n    {\r\n      data.Protected_land_China.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Rest of Central and South America\")\r\n    {\r\n      data.Protected_land_Rest_of_Central_and_South_America.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Rest of North Africa Middle East and central Asia\")\r\n    {\r\n      data.Rest_of_North_Africa_Middle_East_and_central_Asia.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Rest of Asia and Pacific\")\r\n    {\r\n      data.Protected_land_Rest_of_Asia_and_Pacific.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Germany\")\r\n    {\r\n      data.Protected_land_Germany.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"South Africa\")\r\n    {\r\n      data.Protected_land_South_Africa.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"Rest of Sub-Saharan Africa\")\r\n    {\r\n      data.Rest_of_Sub_Saharan_Africa.push(item.Protected_land*100); \r\n    }else if(item.c_country_t===\"otros\")\r\n    {\r\n      data.Protected_land_Otros.push(item.Protected_land*100); \r\n    }\r\n\r\n    if(!data.labels.includes(item.Year))\r\n    {\r\n      data.labels.push(item.Year);\r\n    }\r\n   }\r\n \r\n\r\n  );}\r\n\r\n  console.log(data.Protected_land_Otros)\r\n return data\r\n} \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default drawBiodiversity;\r\n\r\n\r\n\r\n","import React from 'react';\r\n//data\r\n\r\n\r\n\r\n//dashboards\r\nimport NetForestCoverChange from '../pages/NetForestCoverChange'\r\nimport Biodiversity from '../pages/Biodiversity'\r\n\r\n\r\n\r\nconst seleccionarData = (props) => {\r\n   \r\n   \r\n    if (props.data.dashboard===\"gts\")\r\n    {\r\n       return <h1>Gts</h1>\r\n    }else if(props.data.dashboard===\"ntch\")\r\n    {\r\n        \r\n     return   <NetForestCoverChange combinacion={props.data}\r\n                                   />\r\n\r\n       \r\n    }else if(props.data.dashboard===\"ntch2\")\r\n    {\r\n       \r\n      return  <h1>ntch2</h1>\r\n    }else if(props.data.dashboard===\"biodeversity\")\r\n    {\r\n       console.log(\"flag biodiversiti\")\r\n      return   <Biodiversity combinacion={props.data}/>\r\n    }else if(props.data.dashboard===\"pabt\")\r\n    {\r\n       \r\n      return  <h1>pabt</h1>\r\n    }else if(props.data.dashboard===\"lc\")\r\n    {\r\n       \r\n      return  <h1>lc</h1>\r\n    }else if(props.data.dashboard===\"fwu2\")\r\n    {\r\n       \r\n      return  <h1>fwu2</h1>\r\n    }\r\n    return null\r\n}\r\n\r\nexport default seleccionarData;\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport ComboBox from '../componentes/ComboBox'\r\n\r\n\r\nimport Dashboard from '../componentes/Dashboard'\r\nimport TabSelector from '../componentes/tabSelector'\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\nclass Scenathon extends Component {\r\n\r\n    state = {\r\n        select: {\r\n            GraficaType:'group',\r\n            Iteration:'iteration_4',\r\n            Scenario:'Sustainaible'\r\n        },\r\n        dashboard:\"gts\"\r\n    }\r\n    \r\n    //variable para almacenar el dashboard escogido\r\n    \r\n     \r\n     \r\n     \r\n\r\n    //recive valor de class component \"ComboBox\" \r\n    handleChange = e => {\r\n     \r\n        this.setState({\r\n            select: {\r\n                //el next code evitara que se sobrescriba cuando reciva un valor new\r\n                ...this.state.select,\r\n                [e.target.name]: e.target.value\r\n                \r\n            },\r\n            [e.target.name]:e.target.value\r\n           \r\n        })\r\n    }\r\n\r\n   \r\n  \r\n\r\n   \r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            \r\n            <div className=\"container\">\r\n              \r\n              \r\n                 {/* componente de comboBox(opciones para el tipo de grafica)*/} \r\n                 <div className=\"Combo-Box\">\r\n                <ComboBox onChange={this.handleChange}/>\r\n                </div>\r\n                \r\n                <div>\r\n                    <Dashboard metodo={this.handleChange}   />     \r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"tab-selector\">\r\n                <TabSelector    data={this.state}/>         \r\n                </div>\r\n            \r\n          \r\n               \r\n\r\n           \r\n\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Scenathon;   \r\n\r\n","import React from \"react\";\r\nimport \"../css/Box.css\";\r\n\r\nconst Features = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <h1>Global Targets</h1>\r\n      <div className=\"grid\">\r\n        <div className=\"box box1\"></div>\r\n        <div className=\"box box2\"></div>\r\n        <div className=\"box box3\"></div>\r\n        <div className=\"box box4\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .bann_{\r\n       color: #4E4E4E;\r\n       top:5;\r\n       text-align: center;\r\n       font-size:20px;\r\n    }\r\n    .About{\r\n        background-size: cover;\r\n        color: #ccc;\r\n        height: 320px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n    .about_{\r\n      text-align:left;\r\n      color: #306973;\r\n    }\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity:0.6;\r\n        position: absolute;\r\n        top:0; \r\n        left: o;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n    }`;\r\nconst About = () => {\r\n  return (\r\n    <Styles>\r\n        <Jumbo fluid className= \"About\">\r\n            <div className= \"overlay\"></div>\r\n            <Container>\r\n              <li className=\"about_\">ABOUT</li>\r\n            <h1 className = \"bann_\">\r\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed \r\n              do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. quat. Duis aute irure dolor in r\r\n              eprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. </h1>\r\n              <br/>\r\n              <h1 className = \"bann_\">\r\n              \"Lorem ipsum dolor si> Excepteur sint occaecat cupidatat non proident, Duis aute irure dolor in r\r\n              eprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n              Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\r\n                mollit anim id est laborum. \r\n                \"Lorem ipsum dolor sit amet, consectetu\r\n                n voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n                mollit anim id est laborum.\"</h1>\r\n\r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n    \r\n  );\r\n};\r\nexport default About;","import React from 'react';\r\nimport \"../css/App.css\"\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\nimport Nfc from '../pages/Scenathon';\r\nimport Features from \"../pages/GlobalTargets\";\r\nimport About from '../pages/About';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Styles = styled.div`\r\n.navbar{\r\n  background-color: #528D93 ;\r\n}\r\n.navbar-brand, .navbar-nav .nav-link {\r\n  color:white;\r\n  &: hover{\r\n    color:#94B046;\r\n  }\r\n}\r\n`;\r\nconst NavBar = () => {\r\n    return(\r\n\r\n      <Styles>\r\n        <div className=\"NavBar\">\r\n\r\n          <Router>\r\n\r\n\r\n            <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" className=\"nav\" variant=\"light\">\r\n                <Link to=\"/\">\r\n\r\n              <ReactBootStrap.Navbar.Brand href=\"#home\">Fable</ReactBootStrap.Navbar.Brand>\r\n              </Link>\r\n              <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <ReactBootStrap.Nav className=\"mr-auto\"> \r\n\r\n\r\n                </ReactBootStrap.Nav>\r\n                <ReactBootStrap.Nav>\r\n                <ReactBootStrap.Nav.Link href=\"#About\">About </ReactBootStrap.Nav.Link>\r\n                </ReactBootStrap.Nav>\r\n              </ReactBootStrap.Navbar.Collapse>\r\n            </ReactBootStrap.Navbar>\r\n\r\n                  {/* A <Switch> looks through its children <Route>s and\r\n                      renders the first one that matches the current URL. */}\r\n                  <Switch>\r\n                    <Route path=\"/Features\" component={Features}>\r\n                      <Features />\r\n                    </Route>\r\n                    <Route path=\"/\" component={Nfc}>\r\n                      <Nfc />\r\n                    </Route>\r\n                    <Route path=\"/About\"  render={\r\n                      ()=>{\r\n                        return( <h1>About</h1> );\r\n                      }\r\n                    }>\r\n                      <About/>\r\n                    </Route>\r\n                  </Switch>\r\n          \r\n          </Router>\r\n        </div>\r\n      </Styles>\r\n    )\r\n}\r\n\r\nexport default NavBar;","  \r\nimport React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport Banner from '../assets/banner.jpg';\r\n\r\nconst Styles = styled.div`\r\n    .bann{\r\n       color: white;\r\n       top:5;\r\n       text-align: center;\r\n       font-size:85px;\r\n    }\r\n    .jumbo{\r\n        background: url(${Banner});\r\n        background-size: cover;\r\n        color: #ccc;\r\n        height: 500px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity:0.6;\r\n        position: absolute;\r\n        top:0;\r\n        left: o;\r\n        bottom: -5;\r\n        right: 0;\r\n        z-index: -1;\r\n    }`;\r\n\r\n\r\nexport const Jumbotron = () => {\r\n    return(\r\n\r\n    <Styles>\r\n        <Jumbo fluid className= \"jumbo\">\r\n            <div className= \"overlay\"></div>\r\n            <Container>\r\n                <h1 className = \"bann\">Scenathon 2020</h1>\r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n    )\r\n};","  \r\nimport React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport Banner2 from '../assets/banner_2.jpg';\r\n\r\nconst Styles = styled.div`\r\n   \r\n    .jumbo2{\r\n        background: url(${Banner2});\r\n        background-size: cover;\r\n        color: #ccc;\r\n        height: 500px;\r\n        position: absoulte;\r\n        z-index: -2;\r\n    }\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity:0.6;\r\n        position: absolute;\r\n        top:0;\r\n        left: o;\r\n        bottom: -5;\r\n        right: 0;\r\n        z-index: -1;\r\n    }`;\r\n\r\n\r\nexport const Jumbotron_2 = () => {\r\n    return(\r\n\r\n    <Styles>\r\n        <Jumbo fluid className= \"jumbo2\">\r\n            <div className= \"overlay\"></div>\r\n            <Container>\r\n               \r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n    )\r\n};","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .bann_3{\r\n       color: #4E4E4E;\r\n       top:5;\r\n       text-align: center;\r\n       font-size:20px;\r\n    }\r\n    .text{\r\n        background-size: cover;\r\n        color: #ccc;\r\n        height: 200px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n    .scena_{\r\n      text-align:left;\r\n      color: #306973;\r\n    }\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity:0.6;\r\n        position: absolute;\r\n        top:0; \r\n        left: o;\r\n        bottom: 5;\r\n        right: 0;\r\n        z-index: -1;\r\n    }`;\r\nexport const Jumbotron_3 = () => {\r\n  return (\r\n    <Styles>\r\n        <Jumbo fluid className= \"text\">\r\n            <div className= \"overlay\"></div>\r\n            <Container>\r\n              <li className=\"scena_\"> Scenathon </li>\r\n                <h1 className = \"bann_3\">\r\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. </h1>\r\n\r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n    \r\n  );\r\n};","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  \r\n    }\r\n    .fin_t{\r\n        background-color: #528D93;\r\n\r\n        background-size: cover;\r\n        color: #ccc;\r\n        height: 20px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n    .fin{\r\n      text-align:center;\r\n      color: #000000;\r\n    }\r\n    .overlay{\r\n        background-color: #528D93;\r\n        opacity:0.6;\r\n        position: absolute;\r\n        top:0; \r\n        left: o;\r\n        bottom: 5;\r\n        right: 0;\r\n        z-index: -1;\r\n    }`;\r\nexport const Jumbotron_fin = () => {\r\n  return (\r\n    <Styles>\r\n        <Jumbo fluid className= \"fin_t\">\r\n            <div className= \"overlay\"></div>\r\n            <Container>\r\n            <li className=\"fin\">Copyright ©</li>\r\n\r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n    \r\n  );\r\n};","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport Navbar from \"./componentes/Navbar\";\r\nimport About from './pages/About';\r\nimport {Jumbotron } from './componentes/Jumbotron'\r\nimport { Jumbotron_2} from './componentes/Jumbotron_2'\r\nimport { Jumbotron_3} from './componentes/Jumbotron_3'\r\nimport { Jumbotron_fin} from './componentes/Jumbotron_fin'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n      <Jumbotron/> <Navbar/>\r\n        <About/>\r\n        <Jumbotron_2/>\r\n        <Jumbotron_3/>\r\n        <Jumbotron_fin/>\r\n         \r\n    </React.Fragment>\r\n  )\r\n}};\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/banner.07d72b0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner_2.6dc83252.jpg\";"],"sourceRoot":""}